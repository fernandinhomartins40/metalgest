name: Deploy to Hostinger VPS

on:
  push:
    branches:
      - main

jobs:
  port-check:
    name: Check for Available Port
    runs-on: ubuntu-latest
    outputs:
      APP_PORT: ${{ steps.port_check.outputs.APP_PORT }}

    steps:
      - name: Check for available port on VPS
        id: port_check
        uses: appleboy/ssh-action@master
        with:
          host: 82.25.69.57
          username: root
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            USED_PORTS=$(netstat -tulpn | awk '{print $4}' | grep -o ':[0-9]*' | sed 's/://' | sort -u)
            APP_PORT=3000
            while [[ $(echo "$USED_PORTS" | fgrep -w $APP_PORT) ]]; do
              APP_PORT=$((APP_PORT + 1))
            done
            echo "APP_PORT=$APP_PORT" >> $GITHUB_OUTPUT

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: port-check
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Build Frontend
        run: |
          npm install
          npm run build

      - name: Build Backend
        run: |
          cd backend
          npm install
          npm run build

      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-dist
          path: dist

      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-dist
          path: backend/dist

  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    needs: [port-check, build]
    steps:
      - name: Download Frontend Artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend-dist
          path: frontend/dist

      - name: Download Backend Artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-dist
          path: backend/dist

      - name: Transfer files to VPS
        uses: appleboy/scp-action@master
        with:
          host: 82.25.69.57
          username: root
          password: ${{ secrets.VPS_PASSWORD }}
          source: "Dockerfile,docker-compose.yml,frontend/dist/*,backend/dist/*"
          target: "/var/www/metalgest"

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: 82.25.69.57
          username: root
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            cd /var/www/metalgest
            echo "APP_PORT=${{ needs.port-check.outputs.APP_PORT }}" > .env
            echo "DATABASE_URL=postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@db:5432/${{ secrets.DB_NAME }}" >> .env
            docker-compose down || true
            docker-compose up -d --build
            # Health check
            sleep 15
            docker ps
            curl -f http://localhost:${{ needs.port-check.outputs.APP_PORT }}/api/v1/health || exit 1
