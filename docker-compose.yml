services:
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-metalgest}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-metalgest}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - metalgest-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres123}@db:5432/${POSTGRES_DB:-metalgest}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://72.60.10.112:3002}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-metalgest-secret-key-production}
      JWT_SECRET: ${JWT_SECRET:-metalgest-jwt-secret-production}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./apps/server/uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - metalgest-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://72.60.10.112:3002}
    ports:
      - "3001:3000"
    depends_on:
      - backend
    networks:
      - metalgest-network

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "3002:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certs:/etc/nginx/certs
    depends_on:
      - frontend
      - backend
    networks:
      - metalgest-network

volumes:
  postgres_data:

networks:
  metalgest-network:
    driver: bridge