import{K as r}from"./index-3e5870c5.js";const a={log:async({action:t,module:e,details:s})=>{try{if(!localStorage.getItem("metalgest_access_token"))return;const n={action:t,module:e,details:{...s,timestamp:new Date().toISOString(),userAgent:navigator.userAgent,url:window.location.href}};await r.post("/audit/log",n)}catch(o){console.warn("Audit logging failed:",o)}},create:(t,e)=>a.log({action:"create",module:t,details:e}),read:(t,e)=>a.log({action:"read",module:t,details:e}),update:(t,e)=>a.log({action:"update",module:t,details:e}),delete:(t,e)=>a.log({action:"delete",module:t,details:e}),list:(t,e)=>a.log({action:"list",module:t,details:e}),search:(t,e)=>a.log({action:"search",module:t,details:e}),login:t=>a.log({action:"login",module:"auth",details:t}),logout:t=>a.log({action:"logout",module:"auth",details:t}),register:t=>a.log({action:"register",module:"auth",details:t}),custom:(t,e,s)=>a.log({action:t,module:e,details:s})},c={dashboard:{getStats:async()=>{var e;const t=await r.get("/dashboard/stats");if(t.success)return await a.log({action:"get_stats",module:"dashboard",details:{stats:t.data}}),t.data;throw new Error(((e=t.error)==null?void 0:e.message)||"Failed to get dashboard stats")},getCharts:async()=>{var e;const t=await r.get("/dashboard/charts");if(t.success)return await a.log({action:"get_charts",module:"dashboard",details:{charts:t.data}}),t.data;throw new Error(((e=t.error)==null?void 0:e.message)||"Failed to get dashboard charts")},getRecentQuotes:async(t=5)=>{var s;const e=await r.get("/dashboard/recent-quotes",{limit:t});if(e.success)return await a.log({action:"get_recent_quotes",module:"dashboard",details:{count:e.data.length}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to get recent quotes")},getPerformance:async()=>{var e;const t=await r.get("/dashboard/performance");if(t.success)return await a.log({action:"get_performance",module:"dashboard",details:{performance:t.data}}),t.data;throw new Error(((e=t.error)==null?void 0:e.message)||"Failed to get performance data")}},products:{list:async(t={})=>{var s,o;const e=await r.get("/products",t);if(e.success)return await a.log({action:"list",module:"products",details:{count:((s=e.data.data)==null?void 0:s.length)||0,params:t}}),e.data;throw new Error(((o=e.error)==null?void 0:o.message)||"Failed to list products")},create:async t=>{var s;const e=await r.post("/products",t);if(e.success)return await a.log({action:"create",module:"products",details:{productId:e.data.id,name:e.data.name}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to create product")},get:async t=>{var s;const e=await r.get(`/products/${t}`);if(e.success)return await a.log({action:"get",module:"products",details:{productId:t}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to get product")},update:async(t,e)=>{var o;const s=await r.put(`/products/${t}`,e);if(s.success)return await a.log({action:"update",module:"products",details:{productId:t,changes:e}}),s.data;throw new Error(((o=s.error)==null?void 0:o.message)||"Failed to update product")},delete:async t=>{var s;const e=await r.delete(`/products/${t}`);if(e.success)return await a.log({action:"delete",module:"products",details:{productId:t}}),!0;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to delete product")},search:async(t={})=>{var s;const e=await r.get("/products/search",t);if(e.success)return await a.log({action:"search",module:"products",details:{params:t,count:e.data.length}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to search products")}},services:{list:async(t={})=>{var s,o;const e=await r.get("/services",t);if(e.success)return await a.log({action:"list",module:"services",details:{count:((s=e.data.data)==null?void 0:s.length)||0,params:t}}),e.data;throw new Error(((o=e.error)==null?void 0:o.message)||"Failed to list services")},create:async t=>{var s;const e=await r.post("/services",t);if(e.success)return await a.log({action:"create",module:"services",details:{serviceId:e.data.id,name:e.data.name}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to create service")},get:async t=>{var s;const e=await r.get(`/services/${t}`);if(e.success)return await a.log({action:"get",module:"services",details:{serviceId:t}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to get service")},update:async(t,e)=>{var o;const s=await r.put(`/services/${t}`,e);if(s.success)return await a.log({action:"update",module:"services",details:{serviceId:t,changes:e}}),s.data;throw new Error(((o=s.error)==null?void 0:o.message)||"Failed to update service")},delete:async t=>{var s;const e=await r.delete(`/services/${t}`);if(e.success)return await a.log({action:"delete",module:"services",details:{serviceId:t}}),!0;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to delete service")},search:async(t={})=>{var s;const e=await r.get("/services/search",t);if(e.success)return await a.log({action:"search",module:"services",details:{params:t,count:e.data.length}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to search services")}},clients:{list:async(t={})=>{var s,o;const e=await r.get("/clients",t);if(e.success)return await a.log({action:"list",module:"clients",details:{count:((s=e.data.data)==null?void 0:s.length)||0,params:t}}),e.data;throw new Error(((o=e.error)==null?void 0:o.message)||"Failed to list clients")},create:async t=>{var s;const e=await r.post("/clients",t);if(e.success)return await a.log({action:"create",module:"clients",details:{clientId:e.data.id,name:e.data.name}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to create client")},get:async t=>{var s;const e=await r.get(`/clients/${t}`);if(e.success)return await a.log({action:"get",module:"clients",details:{clientId:t}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to get client")},update:async(t,e)=>{var o;const s=await r.put(`/clients/${t}`,e);if(s.success)return await a.log({action:"update",module:"clients",details:{clientId:t,changes:e}}),s.data;throw new Error(((o=s.error)==null?void 0:o.message)||"Failed to update client")},delete:async t=>{var s;const e=await r.delete(`/clients/${t}`);if(e.success)return await a.log({action:"delete",module:"clients",details:{clientId:t}}),!0;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to delete client")},search:async(t={})=>{var s;const e=await r.get("/clients/search",t);if(e.success)return await a.log({action:"search",module:"clients",details:{params:t,count:e.data.length}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to search clients")}},quotes:{list:async(t={})=>{var s,o;const e=await r.get("/quotes",t);if(e.success)return await a.log({action:"list",module:"quotes",details:{count:((s=e.data.data)==null?void 0:s.length)||0,params:t}}),e.data;throw new Error(((o=e.error)==null?void 0:o.message)||"Failed to list quotes")},create:async t=>{var s;const e=await r.post("/quotes",t);if(e.success)return await a.log({action:"create",module:"quotes",details:{quoteId:e.data.id,clientId:e.data.clientId}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to create quote")},get:async t=>{var s;const e=await r.get(`/quotes/${t}`);if(e.success)return await a.log({action:"get",module:"quotes",details:{quoteId:t}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to get quote")},update:async(t,e)=>{var o;const s=await r.put(`/quotes/${t}`,e);if(s.success)return await a.log({action:"update",module:"quotes",details:{quoteId:t,changes:e}}),s.data;throw new Error(((o=s.error)==null?void 0:o.message)||"Failed to update quote")},delete:async t=>{var s;const e=await r.delete(`/quotes/${t}`);if(e.success)return await a.log({action:"delete",module:"quotes",details:{quoteId:t}}),!0;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to delete quote")},duplicate:async t=>{var s;const e=await r.post(`/quotes/${t}/duplicate`);if(e.success)return await a.log({action:"duplicate",module:"quotes",details:{originalQuoteId:t,newQuoteId:e.data.id}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to duplicate quote")},generatePublicLink:async t=>{var s;const e=await r.post(`/quotes/${t}/public-link`);if(e.success)return await a.log({action:"generate_public_link",module:"quotes",details:{quoteId:t}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to generate public link")},getPublicQuote:async t=>{var s;const e=await r.get(`/quotes/public/${t}`);if(e.success)return e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to get public quote")},updatePublicQuoteResponse:async(t,e)=>{var o;const s=await r.put(`/quotes/public/${t}/response`,e);if(s.success)return s.data;throw new Error(((o=s.error)==null?void 0:o.message)||"Failed to update quote response")},generatePDF:async t=>{var s;const e=await r.post(`/quotes/${t}/pdf`);if(e.success)return await a.log({action:"generate_pdf",module:"quotes",details:{quoteId:t}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to generate PDF")}},serviceOrders:{list:async(t={})=>{var s,o;const e=await r.get("/service-orders",t);if(e.success)return await a.log({action:"list",module:"service_orders",details:{count:((s=e.data.data)==null?void 0:s.length)||0,params:t}}),e.data;throw new Error(((o=e.error)==null?void 0:o.message)||"Failed to list service orders")},create:async t=>{var s;const e=await r.post("/service-orders",t);if(e.success)return await a.log({action:"create",module:"service_orders",details:{serviceOrderId:e.data.id,quoteId:e.data.quoteId}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to create service order")},get:async t=>{var s;const e=await r.get(`/service-orders/${t}`);if(e.success)return await a.log({action:"get",module:"service_orders",details:{serviceOrderId:t}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to get service order")},update:async(t,e)=>{var o;const s=await r.put(`/service-orders/${t}`,e);if(s.success)return await a.log({action:"update",module:"service_orders",details:{serviceOrderId:t,changes:e}}),s.data;throw new Error(((o=s.error)==null?void 0:o.message)||"Failed to update service order")},delete:async t=>{var s;const e=await r.delete(`/service-orders/${t}`);if(e.success)return await a.log({action:"delete",module:"service_orders",details:{serviceOrderId:t}}),!0;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to delete service order")},updateStatus:async(t,e)=>{var o;const s=await r.put(`/service-orders/${t}/status`,{status:e});if(s.success)return await a.log({action:"update_status",module:"service_orders",details:{serviceOrderId:t,status:e}}),s.data;throw new Error(((o=s.error)==null?void 0:o.message)||"Failed to update service order status")},createFromQuote:async(t,e)=>{var o;const s=await r.post(`/service-orders/from-quote/${t}`,e);if(s.success)return await a.log({action:"create_from_quote",module:"service_orders",details:{quoteId:t,serviceOrderId:s.data.id}}),s.data;throw new Error(((o=s.error)==null?void 0:o.message)||"Failed to create service order from quote")}},transactions:{list:async(t={})=>{var s,o;const e=await r.get("/transactions",t);if(e.success)return await a.log({action:"list",module:"transactions",details:{count:((s=e.data.data)==null?void 0:s.length)||0,params:t}}),e.data;throw new Error(((o=e.error)==null?void 0:o.message)||"Failed to list transactions")},create:async t=>{var s;const e=await r.post("/transactions",t);if(e.success)return await a.log({action:"create",module:"transactions",details:{transactionId:e.data.id,type:e.data.type,value:e.data.value}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to create transaction")},get:async t=>{var s;const e=await r.get(`/transactions/${t}`);if(e.success)return await a.log({action:"get",module:"transactions",details:{transactionId:t}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to get transaction")},update:async(t,e)=>{var o;const s=await r.put(`/transactions/${t}`,e);if(s.success)return await a.log({action:"update",module:"transactions",details:{transactionId:t,changes:e}}),s.data;throw new Error(((o=s.error)==null?void 0:o.message)||"Failed to update transaction")},delete:async t=>{var s;const e=await r.delete(`/transactions/${t}`);if(e.success)return await a.log({action:"delete",module:"transactions",details:{transactionId:t}}),!0;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to delete transaction")},getSummary:async(t={})=>{var s;const e=await r.get("/transactions/summary",t);if(e.success)return await a.log({action:"get_summary",module:"transactions",details:{params:t}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to get transaction summary")},getBalance:async(t={})=>{var s;const e=await r.get("/transactions/balance",t);if(e.success)return await a.log({action:"get_balance",module:"transactions",details:{params:t}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to get balance")}},settings:{getCompany:async()=>{var e;const t=await r.get("/settings/company");if(t.success)return await a.log({action:"get_company_settings",module:"settings"}),t.data;throw new Error(((e=t.error)==null?void 0:e.message)||"Failed to get company settings")},updateCompany:async t=>{var s;const e=await r.put("/settings/company",t);if(e.success)return await a.log({action:"update_company_settings",module:"settings",details:{changes:t}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to update company settings")},getSystem:async()=>{var e;const t=await r.get("/settings/system");if(t.success)return await a.log({action:"get_system_settings",module:"settings"}),t.data;throw new Error(((e=t.error)==null?void 0:e.message)||"Failed to get system settings")},updateSystem:async t=>{var s;const e=await r.put("/settings/system",t);if(e.success)return await a.log({action:"update_system_settings",module:"settings",details:{changes:t}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to update system settings")},getNotifications:async()=>{var e;const t=await r.get("/settings/notifications");if(t.success)return await a.log({action:"get_notification_settings",module:"settings"}),t.data;throw new Error(((e=t.error)==null?void 0:e.message)||"Failed to get notification settings")},updateNotifications:async t=>{var s;const e=await r.put("/settings/notifications",t);if(e.success)return await a.log({action:"update_notification_settings",module:"settings",details:{changes:t}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to update notification settings")}},users:{list:async(t={})=>{var s,o;const e=await r.get("/users",t);if(e.success)return await a.log({action:"list",module:"users",details:{count:((s=e.data.data)==null?void 0:s.length)||0,params:t}}),e.data;throw new Error(((o=e.error)==null?void 0:o.message)||"Failed to list users")},create:async t=>{var s;const e=await r.post("/users",t);if(e.success)return await a.log({action:"create",module:"users",details:{userId:e.data.id,email:e.data.email}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to create user")},get:async t=>{var s;const e=await r.get(`/users/${t}`);if(e.success)return await a.log({action:"get",module:"users",details:{userId:t}}),e.data;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to get user")},update:async(t,e)=>{var o;const s=await r.put(`/users/${t}`,e);if(s.success)return await a.log({action:"update",module:"users",details:{userId:t,changes:e}}),s.data;throw new Error(((o=s.error)==null?void 0:o.message)||"Failed to update user")},delete:async t=>{var s;const e=await r.delete(`/users/${t}`);if(e.success)return await a.log({action:"delete",module:"users",details:{userId:t}}),!0;throw new Error(((s=e.error)==null?void 0:s.message)||"Failed to delete user")}},upload:{logo:async(t,e)=>{var o;const s=await r.upload("/upload/logo",t,e);if(s.success)return await a.log({action:"upload_logo",module:"upload",details:{fileName:t.name,fileSize:t.size}}),s.data;throw new Error(((o=s.error)==null?void 0:o.message)||"Failed to upload logo")},document:async(t,e)=>{var o;const s=await r.upload("/upload/documents",t,e);if(s.success)return await a.log({action:"upload_document",module:"upload",details:{fileName:t.name,fileSize:t.size}}),s.data;throw new Error(((o=s.error)==null?void 0:o.message)||"Failed to upload document")}}};export{c as a};
