# Nginx configuration with upstream for better error handling
upstream backend_upstream {
    server backend:PORT_PLACEHOLDER max_fails=1 fail_timeout=30s;
}

server {
    listen 80;
    server_name metalgest.com.br www.metalgest.com.br;
    
    # Let's Encrypt challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Frontend static files
    location / {
        root /var/www/frontend;
        try_files $uri /index.html;
    }
    
    # Backend API proxy with upstream
    location /api/ {
        proxy_pass http://backend_upstream/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Handle backend not ready gracefully
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        
        # Return JSON error if backend is not available
        error_page 502 503 504 = @backend_error;
    }
    
    # Backend error handler
    location @backend_error {
        add_header Content-Type application/json;
        return 503 '{"error": "Backend service temporarily unavailable", "status": 503}';
    }
}